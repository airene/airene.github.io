import{_ as e,o as s,c as o,z as a,a as r,t as n,O as l}from"./chunks/framework.7d395e2a.js";const D=JSON.parse('{"title":"是时候尝试一下Caddy了","description":"Caddy v2，免费且自动SSL证书续期，配置文件及其简约，它很香","frontmatter":{"date":"2023-02-04T00:00:00.000Z","title":"是时候尝试一下Caddy了","tags":["caddy"],"description":"Caddy v2，免费且自动SSL证书续期，配置文件及其简约，它很香"},"headers":[],"relativePath":"posts/caddy_auto_tls.md","filePath":"posts/caddy_auto_tls.md"}'),d={name:"posts/caddy_auto_tls.md"},p={id:"frontmatter-title",tabindex:"-1"},c=a("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1),i=l('<h2 id="对caddy的了解" tabindex="-1">对Caddy的了解 <a class="header-anchor" href="#对caddy的了解" aria-label="Permalink to &quot;对Caddy的了解&quot;">​</a></h2><p>学习golang的时候看过，一直觉得离生产比较远，nginx在行业的地位不是三两年就能撼动的。现在v2版本已经出了2年多了，上生产肯定是没问题了。 像介绍说的免费SSL自动续期，配置文件简洁这两条深得我心，小项目换这个很方便。</p><h2 id="番外篇1" tabindex="-1">番外篇1 <a class="header-anchor" href="#番外篇1" aria-label="Permalink to &quot;番外篇1&quot;">​</a></h2><p>看配置文件的时候看到压缩方面，除离gzip之外 还一个zstd，zstd是facebook开源的，号称是比gzip强，尝试了几次想开启来看看和gzip对比一下，一开始以为是debian操作系统要安装zstd，装了也不好使，最后发现是浏览器不支持导致的，caddy的zstd是自包含的，都不用安装 !@#!@#$%%$，干！</p><p><a href="https://github.com/facebook/zstd" target="_blank" rel="noreferrer">https://github.com/facebook/zstd</a><br><a href="https://caddy.community/t/zstd-not-working-caddy-always-prefers-gzip/17900" target="_blank" rel="noreferrer">https://caddy.community/t/zstd-not-working-caddy-always-prefers-gzip/17900</a></p><h2 id="番外篇2" tabindex="-1">番外篇2 <a class="header-anchor" href="#番外篇2" aria-label="Permalink to &quot;番外篇2&quot;">​</a></h2><p>不发起favicon.ico请求的最快方法，不是放一个空文件在工程里面，那样还是会发起请求，下面这种方式请求都没有了</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">icon</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">data:,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>就很香</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://blog.tjll.net/reverse-proxy-hot-dog-eating-contest-caddy-vs-nginx/" target="_blank" rel="noreferrer">Caddy vs Nginx</a></p>',11);function h(t,y,_,f,g,m){return s(),o("div",null,[a("h1",p,[r(n(t.$frontmatter.title)+" ",1),c]),i])}const b=e(d,[["render",h]]);export{D as __pageData,b as default};
