import{r as a,o as s,c as n,a as t,f as e}from"./app.222ca5d5.js";const p='{"title":"travis_ci自动部署vitepress","description":"这个是vitepress官方的配置加了些优化，主要是能提升构建速度","frontmatter":{"date":"2021-07-04","title":"travis_ci自动部署vitepress","tags":["travis"],"description":"这个是vitepress官方的配置加了些优化，主要是能提升构建速度"},"headers":[{"level":2,"title":"配置","slug":"配置"},{"level":2,"title":"几个注意点","slug":"几个注意点"}],"relativePath":"posts/travis_ci.md","lastUpdated":1631851087164}',o={},i=e('<h1 id="travis-ci自动部署vitepress"><a class="header-anchor" href="#travis-ci自动部署vitepress" aria-hidden="true">#</a> travis_ci自动部署vitepress</h1><p>这个是vitepress官方的配置加了些优化，主要是能提升构建速度</p><h2 id="配置"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><div class="language-yaml"><pre><code><span class="token key atrule">language</span><span class="token punctuation">:</span> node_js\n<span class="token key atrule">node_js</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> lts/*\n<span class="token key atrule">install</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> yarn install\n<span class="token key atrule">script</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> yarn build\n<span class="token key atrule">branches</span><span class="token punctuation">:</span>\n    <span class="token key atrule">only</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> master\n<span class="token key atrule">deploy</span><span class="token punctuation">:</span>\n    <span class="token key atrule">provider</span><span class="token punctuation">:</span> pages\n    <span class="token key atrule">skip_cleanup</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">local_dir</span><span class="token punctuation">:</span> .vitepress/dist\n    <span class="token key atrule">github_token</span><span class="token punctuation">:</span> $travis_ci\n    <span class="token key atrule">keep_history</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">on</span><span class="token punctuation">:</span>\n        <span class="token key atrule">branch</span><span class="token punctuation">:</span> master\n<span class="token key atrule">cache</span><span class="token punctuation">:</span>\n    <span class="token key atrule">apt</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">yarn</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">directories</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> node_modules\n\n</code></pre></div><p>其实以上配置忽略了一个重要的配置信息就是target_branch，默认是gh-pages,也就是自动提交到本工程的这个分支。一开始以为是和deploy.sh一套配合使用的，想推到哪里推哪里，其实就这个yml文件就够了，花了不少时间总是构建成功，部署不成功。具体travis支持的所有配置项 <a href="https://docs.travis-ci.com/user/deployment/pages/" target="_blank" rel="noopener noreferrer">github pages config</a></p><p>正常用户的情况应该就一个网站，而且希望域名是短的，比如 <code>xxx.github.io</code> 而不是再增加一个/repo/，变成 <code>xxx.github.io/repo/</code></p><p>GitHub pages 对这两个的支持都很好了，用前者的话，一般还会加一个自定义的域名，https成熟，域名现在很多也不贵。</p><h2 id="几个注意点"><a class="header-anchor" href="#几个注意点" aria-hidden="true">#</a> 几个注意点</h2><ul><li>$travis_ci变量的值是在github平台生成的token，在github随便起名字自己记忆用的，权限也不用开太大，但是变量名是要和travis_ci官网的environment一致，也就是在travis网站上填的是 travis_ci</li><li>travis 有10000的构建信用分，用完了不知道会怎么样，也是为了体验，实际上用完了可以切换到github action</li><li>如果需要绑定域名而且是apex型，顶域名，而不是二级域名， 也就是 <code>xxx.xxx</code> or <code>www.xxx.xxx</code> 单独加cname好像还不行，验证不了，还需要加到 Github pages的A记录才能顺利验证，本来生效就慢，配置完如果没问题，可以过几个小时再回来看</li><li>怎么配置travis, GitHub token网上好的文章一大堆就没必要写了</li></ul>',9);o.render=function(e,p,o,c,l,r){const u=a("Comment");return s(),n("div",null,[i,t(u)])};export{p as __pageData,o as default};
