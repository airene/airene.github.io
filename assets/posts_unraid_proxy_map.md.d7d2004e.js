import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.e4a1f2a7.js";const h=JSON.parse('{"title":"Unraid 实现能代理的时间路线图","description":"对于有\\"洁癖\\"，或者家里\\"条件\\"不好的，比如没有旁路由或者主路由无法开魔法的人可以看一下，这是一个长时间的有点像流水账，并不是一个保姆级教程","frontmatter":{"date":"2022-10-22T00:00:00.000Z","title":"Unraid 实现能代理的时间路线图","tags":["unraid"],"description":"对于有\\"洁癖\\"，或者家里\\"条件\\"不好的，比如没有旁路由或者主路由无法开魔法的人可以看一下，这是一个长时间的有点像流水账，并不是一个保姆级教程"},"headers":[],"relativePath":"posts/unraid_proxy_map.md","filePath":"posts/unraid_proxy_map.md"}'),p={name:"posts/unraid_proxy_map.md"},o=l(`<h1 id="unraid-实现能代理的时间路线图" tabindex="-1">Unraid 实现能代理的时间路线图 <a class="header-anchor" href="#unraid-实现能代理的时间路线图" aria-label="Permalink to &quot;Unraid 实现能代理的时间路线图&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>1、以下所有场景都是主机为单网卡场景<br> 2、CA = community.applications</p></div><h2 id="第一阶段-刚开始玩-unraid-发现系统和插件都无法更新" tabindex="-1">第一阶段：刚开始玩 unraid 发现系统和插件都无法更新 <a class="header-anchor" href="#第一阶段-刚开始玩-unraid-发现系统和插件都无法更新" aria-label="Permalink to &quot;第一阶段：刚开始玩 unraid 发现系统和插件都无法更新&quot;">​</a></h2><p><strong>因为同时也是在正式学习 docker</strong>，所以不想用 vm openwrt 的方式安装小猫咪，尝试方法：</p><ul><li>unraid 自身安装小猫咪，手动在命令行 export， 终端能 proxy，更新系统和CA依然不行</li><li>docker 安装 openwrt ，因为在 unraid 的网卡是否 bond 和 bridge 和 docker 的 macvlan 上朦朦胧胧，花了很长时间才在不桥接的情况下，通过 docker openwrt 能正常更新。</li><li>随即发现，openwrt 可以，那直接安装一个 docker 版的 小猫咪 也可以，尝试发现ok，最终就是这个方案，完全靠自身能力不依赖外部，满意</li></ul><p>核心实现或者原理就是：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># /boot/config/go</span></span>
<span class="line"><span style="color:#E1E4E8;">http_proxy</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://192.168.1.2:7890</span><span style="color:#E1E4E8;"> https_proxy</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://192.168.1.2:7890</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/usr/local/sbin/emhttp</span><span style="color:#E1E4E8;"> &amp;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># /boot/config/go</span></span>
<span class="line"><span style="color:#24292E;">http_proxy</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://192.168.1.2:7890</span><span style="color:#24292E;"> https_proxy</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://192.168.1.2:7890</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">/usr/local/sbin/emhttp</span><span style="color:#24292E;"> &amp;</span></span></code></pre></div><p>这句</p><p>其实还有一个变种实现，比如局域网有一个长开的物理windows，那这个win在小猫咪（允许局域网）开了之后通过切换直连还是代理方式达到目的，也能接受，只是不在本机也还是有点瑕疵而已。</p><h2 id="第二阶段-升级到6-11-x之后发现这种方式无法正常更新了" tabindex="-1">第二阶段：升级到6.11.x之后发现这种方式无法正常更新了 <a class="header-anchor" href="#第二阶段-升级到6-11-x之后发现这种方式无法正常更新了" aria-label="Permalink to &quot;第二阶段：升级到6.11.x之后发现这种方式无法正常更新了&quot;">​</a></h2><p>问了大佬(大佬都是上层有主路由并支持魔法或者旁路由)，官方论坛（无人回），嵌入反馈渠道（balabala无解）都试了一下，没有一个给出直接答案的。</p><p><a href="https://post.smzdm.com/p/all247de/" target="_blank" rel="noreferrer">https://post.smzdm.com/p/all247de/</a> 这篇文章写的比较全，方方面面都有，总结一下，经过大体测试和观察（应该实际就是下面的结论）：</p><ul><li>go file 的 两个 export 会影响 docker pull 这种操作和认识&quot;环境变量&quot;的程序</li><li>go file 写在 emhttp 前面的可能是 6.10.x 生效（<strong>懒，没有回退版本测试</strong>），到 6.11.x 不好用了</li><li>proxy.cfg 文件确认只影响 CA 页面本身的加载，和下载里面的各种内容没关系，下载内容是靠 unraid <code>自身的</code> dynamix.plugin.manager来管理的，纯官方，至少不在 CA 的包里</li></ul><p>经过刨祖坟之后发现 CA 内下载内容实际方法是：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// /usr/local/emhttp/plugins/dynamix.plugin.manager/scripts/plugin 这个文件</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($file </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">popen</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;wget --compression=auto --no-cache --progress=dot --retry-connrefused --timeout=30 --tries=5 --waitretry=5 -O </span><span style="color:#E1E4E8;">$name</span><span style="color:#9ECBFF;"> </span><span style="color:#E1E4E8;">$url</span><span style="color:#9ECBFF;"> 2&gt;&amp;1&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;r&#39;</span><span style="color:#E1E4E8;">)) {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// /usr/local/emhttp/plugins/dynamix.plugin.manager/scripts/plugin 这个文件</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($file </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">popen</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;wget --compression=auto --no-cache --progress=dot --retry-connrefused --timeout=30 --tries=5 --waitretry=5 -O </span><span style="color:#24292E;">$name</span><span style="color:#032F62;"> </span><span style="color:#24292E;">$url</span><span style="color:#032F62;"> 2&gt;&amp;1&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;r&#39;</span><span style="color:#24292E;">)) {</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">}</span></span></code></pre></div><p>得知用的 wget 就好办了，直接在 /root 下面新建一个文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># /root/.wgetrc</span></span>
<span class="line"><span style="color:#E1E4E8;">use_proxy</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">yes</span></span>
<span class="line"><span style="color:#E1E4E8;">http_proxy</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#E1E4E8;">https_proxy</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#E1E4E8;">wait</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># /root/.wgetrc</span></span>
<span class="line"><span style="color:#24292E;">use_proxy</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">yes</span></span>
<span class="line"><span style="color:#24292E;">http_proxy</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#24292E;">https_proxy</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#24292E;">wait</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span></span></code></pre></div><p><strong>重启都不用直接生效！！！</strong></p><p>到目前还没有测试系统更新（下次有系统更新的时候测试），刨祖坟时候发现还有很多 curl 没走 proxy 配置，不知道影响什么</p><h2 id="备份一下-go-file-的内容" tabindex="-1">备份一下 go file 的内容 <a class="header-anchor" href="#备份一下-go-file-的内容" aria-label="Permalink to &quot;备份一下 go file 的内容&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#9ECBFF;">/root/.bash_profile</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"><span style="color:#9ECBFF;">alias ll=&quot;ls -lh&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">alias l=&quot;ls -lah&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">export TIME_STYLE=long-iso</span></span>
<span class="line"><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#9ECBFF;">/root/.wgetrc</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"><span style="color:#9ECBFF;">use_proxy=yes</span></span>
<span class="line"><span style="color:#9ECBFF;">http_proxy=http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#9ECBFF;">https_proxy=http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#9ECBFF;">wait=10</span></span>
<span class="line"><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#9ECBFF;">/etc/sysctl.conf</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"><span style="color:#9ECBFF;">net.ipv6.conf.all.disable_ipv6 = 1</span></span>
<span class="line"><span style="color:#9ECBFF;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">/sbin/sysctl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvlan-shim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">br0</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">macvlan</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">mode</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bridge</span></span>
<span class="line"><span style="color:#B392F0;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">addr</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10.0</span><span style="color:#9ECBFF;">.0.63/32</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvlan-shim</span></span>
<span class="line"><span style="color:#B392F0;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvlan-shim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">address</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8</span><span style="color:#9ECBFF;">a:b1:0f:00:50:64</span></span>
<span class="line"><span style="color:#B392F0;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">link</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvlan-shim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">up</span></span>
<span class="line"><span style="color:#B392F0;">ip</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">route</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10.0</span><span style="color:#9ECBFF;">.0.32/27</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myvlan-shim</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#032F62;">/root/.bash_profile</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__EOF__</span></span>
<span class="line"><span style="color:#032F62;">alias ll=&quot;ls -lh&quot;</span></span>
<span class="line"><span style="color:#032F62;">alias l=&quot;ls -lah&quot;</span></span>
<span class="line"><span style="color:#032F62;">export TIME_STYLE=long-iso</span></span>
<span class="line"><span style="color:#032F62;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#032F62;">/root/.wgetrc</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__EOF__</span></span>
<span class="line"><span style="color:#032F62;">use_proxy=yes</span></span>
<span class="line"><span style="color:#032F62;">http_proxy=http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#032F62;">https_proxy=http://10.0.0.2:7890</span></span>
<span class="line"><span style="color:#032F62;">wait=10</span></span>
<span class="line"><span style="color:#032F62;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#032F62;">/etc/sysctl.conf</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">__EOF__</span></span>
<span class="line"><span style="color:#032F62;">net.ipv6.conf.all.disable_ipv6 = 1</span></span>
<span class="line"><span style="color:#032F62;">__EOF__</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">/sbin/sysctl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">ip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvlan-shim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">br0</span><span style="color:#24292E;"> </span><span style="color:#032F62;">type</span><span style="color:#24292E;"> </span><span style="color:#032F62;">macvlan</span><span style="color:#24292E;">  </span><span style="color:#032F62;">mode</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bridge</span></span>
<span class="line"><span style="color:#6F42C1;">ip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">addr</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10.0</span><span style="color:#032F62;">.0.63/32</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvlan-shim</span></span>
<span class="line"><span style="color:#6F42C1;">ip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvlan-shim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">address</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8</span><span style="color:#032F62;">a:b1:0f:00:50:64</span></span>
<span class="line"><span style="color:#6F42C1;">ip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">link</span><span style="color:#24292E;"> </span><span style="color:#032F62;">set</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvlan-shim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">up</span></span>
<span class="line"><span style="color:#6F42C1;">ip</span><span style="color:#24292E;"> </span><span style="color:#032F62;">route</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10.0</span><span style="color:#032F62;">.0.32/27</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myvlan-shim</span></span></code></pre></div><p>目前只有一级子网（也不需要二级）：</p><ul><li>2 ~ 31 预留给虚拟机或者其他设备</li><li>32 ~ 63 是 docker macvlan网段，其中63是宿主访问 docker macvlan 的<strong>hack</strong>的另一个macvlan</li><li>65 ~ 230 ap池</li><li>231 ~ 253 预留</li></ul>`,23),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const _=s(p,[["render",t]]);export{h as __pageData,_ as default};
