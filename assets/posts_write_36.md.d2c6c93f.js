import{o as n,c as s,f as a}from"./app.eb35be3c.js";const t='{"title":"36进制转换","description":"","frontmatter":{"date":"2017-05-21","title":"36进制转换","tags":["手撕"]},"relativePath":"posts/write_36.md","lastUpdated":1630328512813}',p={},o=[a('<h1 id="_36进制转换"><a class="header-anchor" href="#_36进制转换" aria-hidden="true">#</a> 36进制转换</h1><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">arr36</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        i <span class="token operator">&lt;=</span> <span class="token number">9</span> <span class="token operator">?</span> ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">:</span> ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">87</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//ascii码</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> ret\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">convert36</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">arr36</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> res <span class="token operator">=</span> n <span class="token operator">%</span> <span class="token number">36</span>\n        ret<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>res<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//核心就是一直往前一位放</span>\n        n <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">36</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> ret<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',2)];p.render=function(a,t,p,e,c,u){return n(),s("div",null,o)};export{t as __pageData,p as default};
