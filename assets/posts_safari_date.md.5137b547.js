import{r as a,o as s,c as n,a as e,f as t}from"./app.5cbc613b.js";const p='{"title":"safari中的new Date传参的兼容性问题","description":"new Date()中有字符串","frontmatter":{"date":"2021-08-19","title":"safari中的new Date传参的兼容性问题","tags":["js","safari"],"description":"new Date()中有字符串"},"headers":[{"level":2,"title":"表现","slug":"表现"},{"level":2,"title":"解决办法","slug":"解决办法"},{"level":3,"title":"改用大家都兼容的格式","slug":"改用大家都兼容的格式"},{"level":3,"title":"用类库来解决 比如引入dayjs来抹平","slug":"用类库来解决-比如引入dayjs来抹平"}],"relativePath":"posts/safari_date.md","lastUpdated":1629772947071}',o={},c=t('<h1 id="safari中的new-date的兼容性问题"><a class="header-anchor" href="#safari中的new-date的兼容性问题" aria-hidden="true">#</a> safari中的new Date的兼容性问题</h1><p>safari一直不是主力浏览器，今天一个系统的发现的macOS10.15 依然存在的一个new Date()兼容性问题</p><h2 id="表现"><a class="header-anchor" href="#表现" aria-hidden="true">#</a> 表现</h2><div class="language-js"><pre><code><span class="token keyword">const</span> nowTimestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2021-08-19 12:12:12&#39;</span><span class="token punctuation">)</span>\ndocument<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>nowTimestamp<span class="token punctuation">)</span>\n\n<span class="token comment">// safari 输出  Invalid Date</span>\n<span class="token comment">// chrome 输出  Thu Aug 19 2021 12:12:12 GMT+0800 (中国标准时间)</span>\n</code></pre></div><h2 id="解决办法"><a class="header-anchor" href="#解决办法" aria-hidden="true">#</a> 解决办法</h2><h3 id="改用大家都兼容的格式"><a class="header-anchor" href="#改用大家都兼容的格式" aria-hidden="true">#</a> 改用大家都兼容的格式</h3><div class="language-js"><pre><code><span class="token comment">// 如果构造函数要传参可以这样</span>\n<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2018-11-11 00:00:00&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2018-11-11 00:00:00&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"> </span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">&quot;T&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><p><strong>两种格式都行</strong></p><h3 id="用类库来解决-比如引入dayjs来抹平"><a class="header-anchor" href="#用类库来解决-比如引入dayjs来抹平" aria-hidden="true">#</a> 用类库来解决 比如引入dayjs来抹平</h3>',9);o.render=function(t,p,o,l,r,i){const u=a("Comment");return s(),n("div",null,[c,e(u)])};export{p as __pageData,o as default};
